{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"c",
				"center-align"
			],
			[
				"rank",
				"ranks"
			],
			[
				"user",
				"user_all"
			],
			[
				"zip",
				"zip_list"
			],
			[
				"p",
				"p_given"
			],
			[
				"po",
				"points_user"
			],
			[
				"points",
				"points_user"
			],
			[
				"ans",
				"answer_list"
			],
			[
				"pou",
				"points_user"
			],
			[
				"point",
				"points_user"
			],
			[
				"for",
				"for_matchday"
			],
			[
				"bonus",
				"bonus_count"
			],
			[
				"quest",
				"for_question__for_matchday"
			],
			[
				"for_",
				"for_question"
			],
			[
				"get_",
				"get_matchday_page"
			],
			[
				"get",
				"get_model"
			],
			[
				"q_",
				"q_list"
			],
			[
				"rigth",
				"right-align"
			],
			[
				"Q",
				"Question"
			],
			[
				"p_",
				"p_list_aset"
			],
			[
				"Ans",
				"ScorelineAnswerSet"
			],
			[
				"form_",
				"form_list"
			],
			[
				"card",
				"card-content"
			],
			[
				"in",
				"input\tTag"
			],
			[
				"form",
				"form"
			],
			[
				"f",
				"from"
			],
			[
				"q",
				"q_list"
			],
			[
				"pla",
				"player_1"
			],
			[
				"Ques",
				"questions"
			],
			[
				"context_",
				"context_q"
			],
			[
				"tep",
				"template_name"
			],
			[
				"ren",
				"return"
			],
			[
				"Pr",
				"Profile"
			],
			[
				"Profil",
				"ProfileForm"
			],
			[
				"C",
				"CharField"
			],
			[
				"User",
				"UserCreationForm"
			],
			[
				"pas",
				"password2"
			],
			[
				"passw",
				"password1"
			],
			[
				"ma",
				"max_length"
			],
			[
				"a",
				"a\tTag"
			],
			[
				"re",
				"request"
			],
			[
				"te",
				"template_name"
			],
			[
				"Log",
				"LoginForm"
			],
			[
				"right",
				"right-align"
			],
			[
				"Math",
				"Matchday"
			],
			[
				"Pos",
				"PostAdmin"
			]
		]
	},
	"buffers":
	[
		{
			"file": "fwpl/urls.py",
			"settings":
			{
				"buffer_size": 822,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/Django_Projects/fwpl",
		"/F/Django_Projects/fwpl/fwpl",
		"/F/Django_Projects/fwpl/Management",
		"/F/Django_Projects/fwpl/Management/templates",
		"/F/Django_Projects/fwpl/Management/templates/Management",
		"/F/Django_Projects/fwpl/Player"
	],
	"file_history":
	[
		"/F/Django_Projects/fwpl/fwpl/settings.py",
		"/F/Django_Projects/fwpl/Management/views.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/leaguetable.html",
		"/F/Django_Projects/fwpl/Management/signals.py",
		"/F/Django_Projects/fwpl/Management/templates/base.html",
		"/F/Django_Projects/fwpl/test_rank.py",
		"/F/Django_Projects/fwpl/Management/forms.py",
		"/F/Django_Projects/fwpl/Management/urls.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/submitanswer.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/matchdays.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/matchdayperformance.html",
		"/F/Django_Projects/fwpl/Management/models.py",
		"/F/Django_Projects/fwpl/Management/apps.py",
		"/F/Django_Projects/fwpl/Management/__init__.py",
		"/F/Django_Projects/fwpl/static/css/datepicker.css",
		"/F/Django_Projects/fwpl/Management/templatetags/common.py",
		"/F/Django_Projects/fwpl/fwpl/urls.py",
		"/F/Django_Projects/CCD-master/CCD/jobportal/forms.py",
		"/C/Python27/Lib/site-packages/django/core/signals.py",
		"/C/Python27/Lib/site-packages/django/dispatch/dispatcher.py",
		"/C/Python27/Lib/site-packages/django/db/models/signals.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/submitanswer2.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/updateanswer.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/views_company.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/register.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/login.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/home.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/templates/jobportal/Company/job_create.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/register_confirm.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/templates/jobportal/Student/profile_update.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/views.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/myanswers.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/templatetags/jobportal_tags.py",
		"/F/Django_Projects/fwpl/Management/migrations/__init__.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/matchdaypoints.html",
		"/F/Django_Projects/CCD-master/CCD/jobportal/templates/400.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/questions.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/answersets.html",
		"/F/Django_Projects/fwpl/Management/templates/Management/answerset.html",
		"/F/Django_Projects/CCD/CCD/jobportal/templates/jobportal/Admin/job_list.html",
		"/F/Django_Projects/CCD/CCD/jobportal/views_admin.py",
		"/F/Django_Projects/fwpl/Player/models.py",
		"/F/Django_Projects/fwpl/Performance/models.py",
		"/F/Django_Projects/fwpl/Seasons/models.py",
		"/F/Django_Projects/fwpl/Management/templates/Management/base.html",
		"/F/Django_Projects/fwpl/Management/templates/Login/login.html",
		"/F/Django_Projects/Check.py",
		"/C/cygwin64/home/Rohan/WorksApp_Q2.cpp",
		"/C/cygwin64/home/Rohan/Practice.cpp",
		"/C/cygwin64/home/Rohan/Practice2.cpp",
		"/C/cygwin64/home/Rohan/WorksApp_Q1.cpp",
		"/C/cygwin64/home/Rohan/WorksApp_Q1_Online.cpp",
		"/F/Django_Projects/trial1/posts/urls.py",
		"/F/Django_Projects/fwpl/Management/templates/login.html",
		"/F/Django_Projects/fwpl/Seasons/admin.py",
		"/F/Django_Projects/fwpl/Player/admin.py",
		"/F/Django_Projects/fwpl/Performance/admin.py",
		"/F/Django_Projects/fwpl/Management/admin.py",
		"/F/Django_Projects/fwpl/Test_Code.py",
		"/F/Django_Projects/trial1/posts/admin.py",
		"/F/Django_Projects/fwpl/Answer_Types/models.py",
		"/F/Django_Projects/fwpl/AnswerSet_Types/models.py",
		"/F/Django_Projects/fwpl/Answer_Types/admin.py",
		"/F/Django_Projects/fwpl/Management/migrations/0004_remove_question_margin.py",
		"/F/Django_Projects/fwpl/AnswerSet_Types/admin.py",
		"/C/Python27/Scripts/django-admin.py",
		"/F/Django_Projects/trial1/posts/forms.py",
		"/F/Django_Projects/trial1/templates/index.html",
		"/F/Django_Projects/trial1/templates/post_detail.html",
		"/F/Django_Projects/trial1/templates/post_form.html",
		"/F/Django_Projects/trial1/posts/views.py",
		"/C/cygwin64/home/Rohan/first_try.cpp",
		"/C/cygwin64/home/Rohan/WorkSAP_Q1.cpp",
		"/F/Django_Projects/trial1/tryproject1/urls.py",
		"/F/CPP_Programs/Test_Program.cpp",
		"/F/Django_Projects/Python_Practice - Copy.py",
		"/F/Django_Projects/Python_Practice.py",
		"/F/Textbooks/MTech Project/Dynamic Analysis/Practice/Codes for Loop Simulations/SAP2000_Only_Pier.m",
		"/F/Textbooks/MTech Project/Dynamic Analysis/Practice/Codes for Loop Simulations/SAP2000_Only_Pier.py",
		"/F/Textbooks/MTech Project/Dynamic Analysis/Practice/Codes for Loop Simulations/SAP2000_OAPI_Example.py",
		"/F/Django_Projects/trial1/tryproject1/settings.py",
		"/F/Django_Projects/trial1/posts/models.py",
		"/F/Django_Projects/trial1/posts/apps.py"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"filter(for_question__for_matchday__day = pk)",
			"sender, instance, **kwargs",
			"sender, **kwargs",
			"a.save()",
			"a.points = -2",
			"a.points = 0",
			"a.points = 1",
			"(points = 1)",
			"a.points = 2",
			"sender, instance, **kwargs",
			"body",
			".get",
			"'bonus': forms.CheckboxInput(attrs={'class': 'filled-in'})",
			"['for_question', 'by_player', 'points']",
			"return self.fields['bonus'].disabled = True",
			"self.fields['bonus'].disabled = True",
			"post_save",
			"CV",
			"validation",
			"(sender, **kwargs)",
			"Submit",
			"Submir",
			"form",
			"()",
			"fields",
			"form",
			"question.answer_type",
			"form",
			"m_count",
			"get",
			"instance",
			"alloct_points",
			"player",
			"\"",
			"points = models.IntegerField(editable = False, blank = True, null = True)",
			"points = models.IntegerField(editable = False, blank = True)",
			"points = models.IntegerField(editable = False)",
			"all()",
			"by_player",
			"for_question",
			"_",
			"points = models.IntegerField()",
			"rank",
			"player",
			"myanswers",
			"AnswerSet",
			"S_",
			"', '",
			")\n",
			"register",
			"q_number",
			"for m in m_list:\n\t\t# \tcontext[m.day] = 1",
			"for m in m_list:\n\t\t# \tcontext[m.day]",
			"register",
			"'Matchday_'+str(self.for_question.For_Matchday.MatchDay)+'_Question_'+str(self.for_question.Question_Number)",
			"Rank",
			"For_Question",
			"Player",
			"Answer",
			"Bonus",
			"By_Player",
			"    ",
			"First_Name",
			":",
			"staticfiles",
			"static_cdn",
			"static",
			"form",
			"By_User",
			"_",
			"_Answer",
			">\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"all()",
			"sender, instance",
			"sender, instance, **kwargs",
			"",
			"a.update(points = -2)",
			"a.update(points = 0)",
			"a.update(points = 1)",
			"a.update(points = 2)",
			"sender, **kwargs",
			".filter",
			"'bonus': forms.CheckboxInput(attrs={'class': 'filled-in', 'disabled': 'True'})",
			"['for_question', 'by_player', 'points', 'bonus']",
			"self.fields['bonus'].disabled = True\n\t\treturn self.fields['bonus'].disabled",
			"return self.fields['bonus'].disabled = True",
			"exclude = ['bonus']\n\t\treturn exclude",
			"(sender, instance, **kwargs)",
			"form_class",
			"(request.POST)",
			"request.POST",
			"model",
			"fields",
			"q.answer_type",
			"filter",
			"a",
			"allocate_points",
			"rank",
			"'",
			"points = models.IntegerField(editable = False, default = 0)",
			"points = models.IntegerField(editable = False, blank = True, null = True)",
			"points = models.IntegerField(editable = False, blank = True)",
			"filter(by_player = user)",
			"by__player",
			"for__question",
			"__",
			"points = models.IntegerField(editable = False)",
			"self.rank",
			"self.player",
			"home",
			"Answer",
			"_",
			"char(', ')",
			"home",
			"str(self.for_question.for_matchday.day)+'_'+str(self.for_question.q_number)",
			"rank",
			"for_question",
			"player",
			"answer",
			"bonus",
			"by_player",
			"",
			"first_name",
			"static",
			"staticfiles",
			"{% form %}",
			"{{ form }}",
			"By_Player",
			"",
			"_AnswerSet"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "fwpl/urls.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 822,
						"regions":
						{
						},
						"selection":
						[
							[
								787,
								787
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fwpl_site.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 341.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
